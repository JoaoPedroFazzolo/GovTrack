Index: app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fiap.govtrack.screens\r\n\r\nimport GradientBackground\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.BusinessCenter\r\nimport androidx.compose.material.icons.filled.DateRange\r\nimport androidx.compose.material.icons.filled.Search\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.CircularProgressIndicator\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.collectAsState\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.colorResource\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.fiap.govtrack.R\r\nimport com.fiap.govtrack.components.PagamentoCard\r\nimport com.fiap.govtrack.components.buttonsComponent\r\nimport com.fiap.govtrack.components.userInput\r\nimport com.fiap.govtrack.viewmodel.PagamentosViewModel\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\n\r\n\r\n\r\n@Composable\r\nfun TelaPesquisaCNPJ(navController: NavController?, viewModel: PagamentosViewModel = viewModel()) {\r\n    // Conectar os estados do ViewModel Ã  UI\r\n    val pagamentosList by viewModel.pagamentosList.collectAsState()\r\n    val isLoading by viewModel.isLoading.collectAsState()\r\n    val errorMessage by viewModel.errorMessage.collectAsState()\r\n\r\n    // Estados locais para os campos de entrada\r\n    var cnpj by remember { mutableStateOf(\"\") }\r\n    var ano by remember { mutableStateOf(\"\") }\r\n\r\n    Surface(\r\n        modifier = Modifier.fillMaxSize()\r\n    ) {\r\n        GradientBackground {\r\n            Column(\r\n                modifier = Modifier.fillMaxSize(),\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n            ) {\r\n                Row(\r\n                    verticalAlignment = Alignment.CenterVertically\r\n                ) {\r\n                    Icon(\r\n                        imageVector = Icons.Filled.Search,\r\n                        contentDescription = stringResource(R.string.iconeDePesquisa),\r\n                        tint = Color.White,\r\n                        modifier = Modifier.size(32.dp)\r\n                    )\r\n                    Text(\r\n                        text = stringResource(R.string.facaSuaPesquisa),\r\n                        color = Color.White,\r\n                        fontSize = 20.sp,\r\n                        fontWeight = FontWeight.Bold\r\n                    )\r\n                }\r\n                Card(\r\n                    modifier = Modifier\r\n                        .fillMaxSize()\r\n                        .padding(top = 20.dp),\r\n                    shape = RoundedCornerShape(topStart = 30.dp, topEnd = 30.dp),\r\n                    colors = CardDefaults.cardColors(\r\n                        containerColor = colorResource(R.color.white)\r\n                    )\r\n                ) {\r\n                    Column(\r\n                        modifier = Modifier.padding(16.dp)\r\n                    ) {\r\n                        userInput(\r\n                            value = cnpj,\r\n                            placeholder = stringResource(R.string.CNPJ),\r\n                            keyboardType = KeyboardType.Number,\r\n                            modifier = Modifier\r\n                                .fillMaxWidth()\r\n                                .padding(top = 22.dp, start = 22.dp, end = 22.dp),\r\n                            onValueChange = { cnpj = it },\r\n                            trailingIcon = {\r\n                                Icon(\r\n                                    imageVector = Icons.Default.BusinessCenter,\r\n                                    contentDescription = stringResource(R.string.iconeDeConstrucao)\r\n                                )\r\n                            }\r\n                        )\r\n                        userInput(\r\n                            value = ano,\r\n                            placeholder = stringResource(R.string.ano),\r\n                            keyboardType = KeyboardType.Number,\r\n                            modifier = Modifier\r\n                                .fillMaxWidth()\r\n                                .padding(top = 22.dp, start = 22.dp, end = 22.dp),\r\n                            onValueChange = { ano = it },\r\n                            trailingIcon = {\r\n                                Icon(\r\n                                    imageVector = Icons.Filled.DateRange,\r\n                                    contentDescription = stringResource(R.string.iconeDeConstrucao)\r\n                                )\r\n                            }\r\n                        )\r\n                        buttonsComponent(\r\n                            texto = \"Buscar\",\r\n                            onClick = {\r\n                                viewModel.buscarPagamentos(cnpj, ano)\r\n                            }\r\n                        )\r\n                        errorMessage?.let {\r\n                            Text(\r\n                                text = it,\r\n                                color = Color.Red,\r\n                                modifier = Modifier.padding(top = 16.dp)\r\n                            )\r\n                        }\r\n\r\n                        if (isLoading) {\r\n                            CircularProgressIndicator(modifier = Modifier.padding(top = 16.dp))\r\n                        } else {\r\n                            LazyColumn {\r\n                                items(pagamentosList) { pagamento ->\r\n                                    PagamentoCard(pagamento)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showSystemUi = true)\r\n@Composable\r\nprivate fun TelaPesquisaPreview() {\r\n    TelaPesquisaCNPJ(null)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt b/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt
--- a/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt	(revision ac3de701a7e62694a0ce47aede60742c181ef590)
+++ b/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt	(date 1742167185125)
@@ -2,6 +2,7 @@
 
 import GradientBackground
 import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.PaddingValues
 import androidx.compose.foundation.layout.Row
 import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.fillMaxWidth
@@ -140,7 +141,9 @@
                         if (isLoading) {
                             CircularProgressIndicator(modifier = Modifier.padding(top = 16.dp))
                         } else {
-                            LazyColumn {
+                            LazyColumn(
+                                contentPadding = PaddingValues(bottom = 16.dp)
+                            ) {
                                 items(pagamentosList) { pagamento ->
                                     PagamentoCard(pagamento)
                                 }
