Index: app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fiap.govtrack.screens\r\n\r\nimport GradientBackground\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.BusinessCenter\r\nimport androidx.compose.material.icons.filled.DateRange\r\nimport androidx.compose.material.icons.filled.Search\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.colorResource\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.fiap.govtrack.R\r\nimport com.fiap.govtrack.components.userInput\r\n\r\n\r\n@Composable\r\nfun TelaPesquisaCNPJ(navController: NavController?) {\r\n    Surface(\r\n        modifier = Modifier.fillMaxSize()\r\n    ) {\r\n        GradientBackground{\r\n            Column(\r\n                modifier = Modifier.fillMaxSize(),\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n            ) {\r\n                Row(\r\n                    verticalAlignment = Alignment.CenterVertically\r\n                ) {\r\n                    Icon(\r\n                        imageVector = Icons.Filled.Search,\r\n                        contentDescription = stringResource(R.string.iconeDePesquisa),\r\n                        tint = Color.White,\r\n                        modifier = Modifier.size(32.dp)\r\n                    )\r\n                    Text(\r\n                        text = stringResource(R.string.facaSuaPesquisa),\r\n                        color = Color.White,\r\n                        fontSize = 20.sp,\r\n                        fontWeight = FontWeight.Bold\r\n                    )\r\n                }\r\n                Card(\r\n                    modifier = Modifier\r\n                        .fillMaxSize().padding(top = 20.dp),\r\n                    shape = RoundedCornerShape(topStart = 30.dp, topEnd = 30.dp),\r\n                    colors = CardDefaults.cardColors(\r\n                        containerColor = colorResource(R.color.white)\r\n                    )\r\n                ) {\r\n                    Column(\r\n                        modifier = Modifier.padding(16.dp)\r\n                    ) {\r\n                        userInput(\r\n                            value = \"\",\r\n                            placeholder = stringResource(R.string.CNPJ),\r\n                            keyboardType = KeyboardType.Number,\r\n                            modifier = Modifier.fillMaxWidth().padding(top = 22.dp, start = 22.dp, end = 22.dp),\r\n                            onValueChange = { },\r\n                            trailingIcon = {\r\n                                Icon(imageVector = Icons.Default.BusinessCenter, contentDescription = stringResource(R.string.iconeDeConstrucao))\r\n                            }\r\n                        )\r\n                        userInput(\r\n                            value = \"\",\r\n                            placeholder = stringResource(R.string.ano),\r\n                            keyboardType = KeyboardType.Number,\r\n                            modifier = Modifier.fillMaxWidth().padding(top = 22.dp, start = 22.dp, end = 22.dp),\r\n                            onValueChange = { },\r\n                            trailingIcon = {\r\n                                Icon(imageVector = Icons.Filled.DateRange, contentDescription = stringResource(R.string.iconeDeConstrucao))\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showSystemUi = true)\r\n@Composable\r\nprivate fun TelaPesquisaPreview() {\r\n    TelaPesquisaCNPJ(null)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt b/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt
--- a/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt	(revision 3906ad8b952503df19e3d22a534ee7220b6927f9)
+++ b/app/src/main/java/com/fiap/govtrack/screens/telaPesquisaCNPJ.kt	(date 1742907359215)
@@ -7,6 +7,8 @@
 import androidx.compose.foundation.layout.fillMaxWidth
 import androidx.compose.foundation.layout.padding
 import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.items
 import androidx.compose.foundation.shape.RoundedCornerShape
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.filled.BusinessCenter
@@ -14,10 +16,16 @@
 import androidx.compose.material.icons.filled.Search
 import androidx.compose.material3.Card
 import androidx.compose.material3.CardDefaults
+import androidx.compose.material3.CircularProgressIndicator
 import androidx.compose.material3.Icon
 import androidx.compose.material3.Surface
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
+import androidx.compose.runtime.collectAsState
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
@@ -30,15 +38,29 @@
 import androidx.compose.ui.unit.sp
 import androidx.navigation.NavController
 import com.fiap.govtrack.R
+import com.fiap.govtrack.components.PagamentoCard
+import com.fiap.govtrack.components.buttonsComponent
 import com.fiap.govtrack.components.userInput
+import com.fiap.govtrack.viewmodel.PagamentosViewModel
+import androidx.lifecycle.viewmodel.compose.viewModel
+
 
 
 @Composable
-fun TelaPesquisaCNPJ(navController: NavController?) {
+fun TelaPesquisaCNPJ(navController: NavController?, viewModel: PagamentosViewModel = viewModel()) {
+    // Conectar os estados do ViewModel Ã  UI
+    val pagamentosList by viewModel.pagamentosList.collectAsState()
+    val isLoading by viewModel.isLoading.collectAsState()
+    val errorMessage by viewModel.errorMessage.collectAsState()
+
+    // Estados locais para os campos de entrada
+    var cnpj by remember { mutableStateOf("") }
+    var ano by remember { mutableStateOf("") }
+
     Surface(
         modifier = Modifier.fillMaxSize()
     ) {
-        GradientBackground{
+        GradientBackground {
             Column(
                 modifier = Modifier.fillMaxSize(),
                 horizontalAlignment = Alignment.CenterHorizontally
@@ -61,7 +83,8 @@
                 }
                 Card(
                     modifier = Modifier
-                        .fillMaxSize().padding(top = 20.dp),
+                        .fillMaxSize()
+                        .padding(top = 20.dp),
                     shape = RoundedCornerShape(topStart = 30.dp, topEnd = 30.dp),
                     colors = CardDefaults.cardColors(
                         containerColor = colorResource(R.color.white)
@@ -71,25 +94,58 @@
                         modifier = Modifier.padding(16.dp)
                     ) {
                         userInput(
-                            value = "",
+                            value = cnpj,
                             placeholder = stringResource(R.string.CNPJ),
                             keyboardType = KeyboardType.Number,
-                            modifier = Modifier.fillMaxWidth().padding(top = 22.dp, start = 22.dp, end = 22.dp),
-                            onValueChange = { },
+                            modifier = Modifier
+                                .fillMaxWidth()
+                                .padding(top = 22.dp, start = 22.dp, end = 22.dp),
+                            onValueChange = { cnpj = it },
                             trailingIcon = {
-                                Icon(imageVector = Icons.Default.BusinessCenter, contentDescription = stringResource(R.string.iconeDeConstrucao))
+                                Icon(
+                                    imageVector = Icons.Default.BusinessCenter,
+                                    contentDescription = stringResource(R.string.iconeDeConstrucao)
+                                )
                             }
                         )
                         userInput(
-                            value = "",
+                            value = ano,
                             placeholder = stringResource(R.string.ano),
                             keyboardType = KeyboardType.Number,
-                            modifier = Modifier.fillMaxWidth().padding(top = 22.dp, start = 22.dp, end = 22.dp),
-                            onValueChange = { },
+                            modifier = Modifier
+                                .fillMaxWidth()
+                                .padding(top = 22.dp, start = 22.dp, end = 22.dp),
+                            onValueChange = { ano = it },
                             trailingIcon = {
-                                Icon(imageVector = Icons.Filled.DateRange, contentDescription = stringResource(R.string.iconeDeConstrucao))
+                                Icon(
+                                    imageVector = Icons.Filled.DateRange,
+                                    contentDescription = stringResource(R.string.iconeDeConstrucao)
+                                )
+                            }
+                        )
+                        buttonsComponent(
+                            texto = "Buscar",
+                            onClick = {
+                                viewModel.buscarPagamentos(cnpj, ano)
                             }
                         )
+                        errorMessage?.let {
+                            Text(
+                                text = it,
+                                color = Color.Red,
+                                modifier = Modifier.padding(top = 16.dp)
+                            )
+                        }
+
+                        if (isLoading) {
+                            CircularProgressIndicator(modifier = Modifier.padding(top = 16.dp))
+                        } else {
+                            LazyColumn {
+                                items(pagamentosList) { pagamento ->
+                                    PagamentoCard(pagamento)
+                                }
+                            }
+                        }
                     }
                 }
             }
